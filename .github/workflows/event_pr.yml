name: '[event] PR'
run-name: '[event] ${{ github.event.action }} "${{ github.event.pull_request.title }}" targeting {${{ github.event.pull_request.base.ref }}}'
# Upon receiving a PR, this workflow will run all build and test checks required

on:
  pull_request:
    branches:    
      - main
      - beta
      - dev

jobs:
  build:
    name: build
    uses: ./.github/workflows/artifacts_build-release.yml
    # permissions: {}
    permissions: # These should not be necessary - see https://github.com/orgs/community/discussions/155062
      contents: write
      id-token: write
      pages: write
      issues: write
      pull-requests: write # This one is required for Docker Scout feedback on PR during build step
    with:
      all-artifacts: true
      release: false
    secrets:
      docker-token: ${{ secrets.DOCKER_TOKEN }}
      gh-token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs: build
    uses: ./.github/workflows/artifacts_test.yml
    permissions: 
      pull-requests: write # This one is required for Docker Scout feedback on PR during build step
    with:
      methods: ${{github.base_ref == 'main' && '["unit-ubuntu", "unit-macos", "e2e", "api"]' || (github.base_ref == 'beta' && '["unit-ubuntu", "e2e", "api"]' || '["unit-ubuntu"]' ) }} # Only running full suite when targeting beta or main

  dependabot:
    name: dependabot-auto-merge
    needs: test
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]' && github.repository == 'steilerdev/icloud-photos-sync'
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
      - name: Enable auto-merge for Dependabot PRs
        if: steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "${{github.event.pull_request.html_url}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
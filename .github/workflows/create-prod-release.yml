name: Create Production Release
# A manually triggered workflow to create a new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version string for release'
        default: 'v1.0.0'
        required: true

# Just a roll-up with the max permissions / handled on job level
permissions:
  contents: write

jobs:
  version-bump:
    name: Repository version bump
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://github.com/steilerDev/icloud-photos-sync/tree/main
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: 'app/.node-version'
          cache: 'npm'
          cache-dependency-path: app/
      - name: Update files for version bump
        run: |
          NUMERIC_VERSION=${VERSION:1}

          # Updating changelog to reflect that nightly changes are now in release
          sed -i '/^## Nightly Changes/c\<!-- ## Nightly Changes-->\n\n## '${VERSION} CHANGELOG.md

          # Updating version references in the app
          sed -ri 's/"version": "[0-9]+\.[0-9]+\.[0-9]+"/"version": "'${NUMERIC_VERSION}'"/' app/package.json
          sed -ri 's/VERSION = `[0-9]+\.[0-9]+\.[0-9]+`/VERSION = `'${NUMERIC_VERSION}'`/' app/src/lib/package.ts

          # Updating badge in README to show latest pipeline run
          sed -ri 's/branch=v[0-9]+\.[0-9]+\.[0-9]+/branch=v'${NUMERIC_VERSION}'/' README.md

              <img alt="Production Release Status" src="https://img.shields.io/github/actions/workflow/status/steilerDev/icloud-photos-sync/prod-release.yml?branch=v1.0.1&label=Prod%20Release&style=for-the-badge&logo=githubactions&logoColor=white">
        env:
          VERSION: ${{ github.event.inputs.version }}
      - name: Update package
        run: npm install
        working-directory: app/
      - name: Generate CLI Reference
        run: |
          OUT_FILE='./pages/docs/user-guides/cli.md'
          BIN='./app/node_modules/.bin/ts-node-esm app/src/main.ts'
          > $OUT_FILE

          echo "# CLI Reference" >> $OUT_FILE
          echo '' >> $OUT_FILE
          echo '```' >> $OUT_FILE
          $BIN --help >> $OUT_FILE
          echo '```' >> $OUT_FILE
          echo '' >> $OUT_FILE

          echo '## `token` command' >> $OUT_FILE
          echo '' >> $OUT_FILE
          echo '```' >> $OUT_FILE
          $BIN token --help >> $OUT_FILE
          echo '```' >> $OUT_FILE
          echo '' >> $OUT_FILE

          echo '## `sync` command'  >> $OUT_FILE
          echo '' >> $OUT_FILE
          echo '```' >> $OUT_FILE
          $BIN sync --help >> $OUT_FILE
          echo '```' >> $OUT_FILE
          echo '' >> $OUT_FILE

          echo '## `archive` command' >> $OUT_FILE
          echo '' >> $OUT_FILE
          echo '```' >> $OUT_FILE
          $BIN archive --help >> $OUT_FILE
          echo '```' >> $OUT_FILE

          echo '## `daemon` command' >> $OUT_FILE
          echo '' >> $OUT_FILE
          echo '```' >> $OUT_FILE
          $BIN daemon --help >> $OUT_FILE
          echo '```' >> $OUT_FILE
      - name: Commit & Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: Version bump to ${{ inputs.version }}
          tagging_message: ${{ inputs.version }}
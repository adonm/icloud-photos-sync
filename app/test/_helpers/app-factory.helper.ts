import * as Config from './_config';

export const rejectOptions = [
    {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Missing username & password`,
        expected: `error: required option '-u, --username <email>' not specified\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Missing password`,
        expected: `error: required option '-p, --password <password>' not specified\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `eight`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid port`,
        expected: `error: option '-P, --port <number>' argument 'eight' is invalid. Not a number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `-5`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `-r`,
            `-1`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Negative port`,
        expected: `error: option '-P, --port <number>' argument '-5' is invalid. Not a positive number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `superInfo`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `-r`,
            `-1`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid log level`,
        expected: `error: option '-l, --log-level <level>' argument 'superInfo' is invalid. Allowed choices are debug, info, warn, error.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `five`,
            `-r`,
            `-1`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid download threads`,
        expected: `error: option '-t, --download-threads <number>' argument 'five' is invalid. Not a number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `-5`,
            `-r`,
            `-1`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Negative download threads`,
        expected: `error: option '-t, --download-threads <number>' argument '-5' is invalid. Not a positive number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `-r`,
            `inf`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid retries`,
        expected: `error: option '-r, --max-retries <number>' argument 'inf' is invalid. Not a number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `-r`,
            `-5`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Negative retries`,
        expected: `error: option '-r, --max-retries <number>' argument '-5' is invalid. Not a positive number.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--metadata-rate`,
            `1s`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid metadata rate format`,
        expected: `error: option '--metadata-rate <interval>' argument '1s' is invalid. Not a valid interval pattern. Expects the format '<numberOfRequests|Infinity>/<timeInMs>', e.g. '1/20' to limit requests to one in 20ms.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--metadata-rate`,
            `1/Infinity`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid metadata rate - Infinite times`,
        expected: `error: option '--metadata-rate <interval>' argument '1/Infinity' is invalid. Not a valid interval pattern. Expects the format '<numberOfRequests|Infinity>/<timeInMs>', e.g. '1/20' to limit requests to one in 20ms.\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--metadata-rate`,
            `0/20`,
            `--refresh-token`,
            `token`,
        ],
        _desc: `Invalid metadata rate - No runs`,
        expected: `error: option '--metadata-rate <interval>' argument '0/20' is invalid. Not a valid interval. Number of runs needs to be >0\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--refresh-token`,
            `archive`,
        ],
        _desc: `Missing archive path`,
        expected: `error: missing required argument 'path'\n`,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
            `-d`,
            `/opt/icloud-photos-library`,
            `-P`,
            `80`,
            `-l`,
            `info`,
            `--log-to-cli`,
            `-s`,
            `-t`,
            `5`,
            `--refresh-token`,
            `--schedule`,
            `asdf`,
            `daemon`,
        ],
        _desc: `Mis-formatted schedule`,
        expected: `error: option '-S, --schedule <cron-string>' argument 'asdf' is invalid. Not a valid cron pattern. See https://crontab.guru (or for more information on the underlying implementation https://github.com/hexagon/croner#pattern)\n`,
    },
];

export const nonRejectOptions = [
    {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            Config.defaultConfig.username,
            `-p`,
            Config.defaultConfig.password,
        ],
        _desc: `Default options`,
        expectedOptions: Config.defaultConfig,
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-T`,
            `some-trust-token`,
        ],
        _desc: `Trust token set`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            trustToken: `some-trust-token`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-d`,
            `/some/data/dir`,
        ],
        _desc: `Data dir set`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/some/data/dir`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-P`,
            `8080`,
        ],
        _desc: `Port set`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 8080,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-r`,
            `50`,
        ],
        _desc: `Max retries set to number`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: 50,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-r`,
            `Infinity`,
        ],
        _desc: `Max retries set to Infinity`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-t`,
            `50`,
        ],
        _desc: `Download threads set to number`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 50,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-t`,
            `Infinity`,
        ],
        _desc: `Download threads set to Infinity`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: Infinity,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `-S`,
            `0 1 10 * *`,
        ],
        _desc: `Schedule set`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 1 10 * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--enable-crash-reporting`,
        ],
        _desc: `Crash reporting enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: true,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--fail-on-mfa`,
        ],
        _desc: `Fail on MFA enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: true,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--force`,
        ],
        _desc: `Force enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: true,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--refresh-token`,
        ],
        _desc: `Refresh token enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: true,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--remote-delete`,
        ],
        _desc: `Remote delete enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: true,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--log-level`,
            `warn`,
        ],
        _desc: `Log level set to warn`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `warn`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--silent`,
        ],
        _desc: `Silent enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: true,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--log-to-cli`,
        ],
        _desc: `Log to cli enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: true,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--suppress-warnings`,
        ],
        _desc: `Suppress warnings enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: true,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--export-metrics`,
        ],
        _desc: `Export metrics enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: true,
            metadataRate: [Infinity, 0],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--metadata-rate`,
            `5/10`,
        ],
        _desc: `Metadata rate enabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [5, 10],
            networkCapture: true,
        },
    }, {
        options: [
            `/usr/bin/node`,
            `/home/icloud-photos-sync/main.js`,
            `-u`,
            `test@icloud.com`,
            `-p`,
            `testPass`,
            `--no-network-capture`,
        ],
        _desc: `Network capture disabled`,
        expectedOptions: {
            username: `test@icloud.com`,
            password: `testPass`,
            dataDir: `/opt/icloud-photos-library`,
            port: 80,
            maxRetries: Infinity,
            downloadThreads: 5,
            schedule: `0 2 * * *`,
            enableCrashReporting: false,
            failOnMfa: false,
            force: false,
            refreshToken: false,
            remoteDelete: false,
            logLevel: `info`,
            silent: false,
            logToCli: false,
            suppressWarnings: false,
            exportMetrics: false,
            metadataRate: [Infinity, 0],
            networkCapture: false,
        },
    },
];

export const validOptions = {
    token: [
        `/usr/bin/node`,
        `/home/icloud-photos-sync/main.js`,
        `-u`,
        `test@icloud.com`,
        `-p`,
        `testPass`,
        `token`,
    ],
    tokenWithForce: [
        `/usr/bin/node`,
        `/home/icloud-photos-sync/main.js`,
        `-u`,
        `test@icloud.com`,
        `-p`,
        `testPass`,
        `--force`,
        `token`,
    ],
    sync: [
        `/usr/bin/node`,
        `/home/icloud-photos-sync/main.js`,
        `-u`,
        `test@icloud.com`,
        `-p`,
        `testPass`,
        `sync`,
    ],
    archive: [
        `/usr/bin/node`,
        `/home/icloud-photos-sync/main.js`,
        `-u`,
        `test@icloud.com`,
        `-p`,
        `password`,
        `archive`,
        `/root/someTestDir/`,
    ],
    daemon: [
        `/usr/bin/node`,
        `/home/icloud-photos-sync/main.js`,
        `-u`,
        `test@icloud.com`,
        `-p`,
        `password`,
        `daemon`,
    ],
};